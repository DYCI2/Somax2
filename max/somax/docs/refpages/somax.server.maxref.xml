<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="somax.server" module="somax" kind="patcher">

	<digest>
		Controls the remote somax server
	</digest>

	<description>
		The somax server is an external application through which all somax.player objects communicate. The somax.server object manages all the communication with the remote server using the OSC protocol, so in order to use a somax.player, it's always necessary to first initialize the somax.server object. The server is also responsible for managing and synchronize time between the players.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">ircam</metadata>
		<metadata name="tag">somax</metadata>
	</metadatalist>

	<!--ARGUMENTS-->
	<objarglist>
        <objarg name="sendport" optional="1" type="int">
			<digest>
				OSC send port
			</digest>
			<description>
				TODO
			</description>
		</objarg>
        <objarg name="recvport" optional="1" type="int">
			<digest>
				OSC receive port
			</digest>
			<description>
				TODO
			</description>
		</objarg>
        <objarg name="ip" optional="1" type="symbol">
			<digest>
				OSC ip address
			</digest>
			<description>
				TODO
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>Output generation time</digest>
			<description>TODO</description>
		</method>
        <method name="int">
			<arglist />
			<digest>Toggle generation</digest>
			<description>Performs the same function as <m>start</m> and <m>stop</m></description>
		</method>
        <method name="corpora">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>List the corpora present on the current corpuspath</digest>
			<description>TODO</description>
		</method>
        <method name="corpuspath">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Query the current corpuspath</digest>
			<description>TODO</description>
		</method>
        <method name="initialize">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Initialize server</digest>
			<description>TODO</description>
		</method>
        <method name="initializeplayers">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Initialize on the server all local players</digest>
			<description>TODO</description>
		</method>
        <method name="ip">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Set server ip address</digest>
			<description>TODO</description>
		</method>
        <method name="openwindow">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Open server window</digest>
			<description>TODO</description>
		</method>
        <method name="players">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Get list of the players currently initialized on the server</digest>
			<description>TODO</description>
		</method>
        <method name="recvport">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Set OSC receive port address</digest>
			<description>TODO</description>
		</method>
		<method name="reload">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Reload the server if terminated</digest>
			<description>TODO</description>
		</method>
        <method name="sendport">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Set OSC send port address</digest>
			<description>TODO</description>
		</method>
        <method name="start">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Start generation</digest>
			<description>TODO</description>
		</method>
        <method name="stop">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Stop generation</digest>
			<description>TODO</description>
		</method>
        <method name="terminate">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Terminate the server</digest>
			<description>TODO</description>
		</method>
        <method name="time">
			<arglist><arg name="input" optional="0" type="int" /></arglist>
			<digest>Performs the same function as bang</digest>
			<description>TODO</description>
		</method>
	</methodlist>
	
    <!--ATTRIBUTES-->
	<attributelist>
        <attribute name="active" get="0" set="1" type="symbol" size="1">
			<digest>Performs the same function as int</digest>
			<description>TODO</description>
		</attribute>
        <attribute name="autoinitialize" get="0" set="1" type="symbol" size="1">
			<digest>Enable/Disable autoinitialization of the server when created</digest>
			<description>TODO</description>
		</attribute>
        <attribute name="autoterminate" get="0" set="1" type="symbol" size="1">
			<digest>TODO</digest>
			<description>TODO</description>
		</attribute>
        <attribute name="tempo" get="1" set="1" type="symbol" size="1">
			<digest>Set server transport tempo value</digest>
			<description>TODO</description>
		</attribute>
        <attribute name="temposource" get="1" set="1" type="symbol" size="1">
			<digest>Select the source from which the server controls its tempo</digest>
			<description>TODO</description>
		</attribute>
	</attributelist>
	
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="somax.server.app" />
		<seealso name="somax.player" />
        <seealso name="somax.audiocorpusbuilder" />
        <seealso name="somax.midicorpusbuilder" />
	</seealsolist>
	
</c74object>