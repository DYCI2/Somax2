; Protocol format:
;   [DEBUG] messages should start with their function name in lower case within brackets
;   [INFO] messages (and above) are designed for the user and should not contain any code-related information


;;;;;;;;;;;;;;;;;;;;
; Declarations
;;;;;;;;;;;;;;;;;;;;

[loggers]
keys=root,main, SoMaxServer, asyncio, IOParser, Scheduler, Agent, Player, Target, PeakSelector, StreamView, Atom, MergeActions, MemorySpaces, ActivityPattern, Tools, Events, Corpus, CorpusBuilder

[handlers]
keys=root,main, IOParser, asyncio, Scheduler, Agent, Player, Target, PeakSelector, StreamView, Atom, MergeActions, MemorySpaces, ActivityPattern, Tools, Events, Corpus, CorpusBuilder

[formatters]
keys=logfile, stdout

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Logfile logger
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[logger_root]           ; this level manages what's written to the log (independent of other settings)
level=DEBUG
handlers=root
propagate=0
;[handler_root]
;class=FileHandler
;level=DEBUG
;formatter=logfile
;args=("log/logfile.log",'w')
[handler_root]
class=StreamHandler
level=CRITICAL
formatter=stdout
args=(sys.stdout,)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Per-module stdout loggers
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[logger_main]
handlers=main
propagate=1
qualname=__main__
[handler_main]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_SoMaxServer]
handlers=main
propagate=1
qualname=SoMaxServer

[logger_IOParser]
handlers=IOParser
propagate=1
qualname=somaxlibrary.IOParser
[handler_IOParser]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_asyncio]
handlers=asyncio
propagate=1
qualname=asyncio
[handler_asyncio]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Scheduler]
handlers=Scheduler
propagate=1
qualname=somaxlibrary.scheduler.Scheduler
[handler_Scheduler]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Agent]
handlers=Agent
propagate=1
qualname=somax.runtime.agent
[handler_Agent]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Player]
handlers=Player
propagate=1
qualname=somaxlibrary.Player
[handler_Player]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Target]
handlers=Target
propagate=1
qualname=somaxlibrary.Target
[handler_Target]
level=DEBUG
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_PeakSelector]
handlers=PeakSelector
propagate=1
qualname=somax.runtime.peak_selector
[handler_PeakSelector]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_StreamView]
handlers=StreamView
propagate=1
qualname=somaxlibrary.StreamView
[handler_StreamView]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Atom]
handlers=Atom
propagate=1
qualname=somaxlibrary.Atom
[handler_Atom]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_MergeActions]
handlers=MergeActions
propagate=1
qualname=somaxlibrary.MergeActions
[handler_MergeActions]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_MemorySpaces]
handlers=MemorySpaces
propagate=1
qualname=somaxlibrary.MemorySpaces
[handler_MemorySpaces]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_ActivityPattern]
handlers=ActivityPattern
propagate=1
qualname=somaxlibrary.ActivityPattern
[handler_ActivityPattern]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Tools]
handlers=Tools
propagate=1
qualname=somaxlibrary.Tools
[handler_Tools]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Events]
handlers=Events
propagate=1
qualname=somaxlibrary.Events
[handler_Events]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_Corpus]
handlers=Corpus
propagate=1
qualname=somaxlibrary.runtime.corpus
[handler_Corpus]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[logger_CorpusBuilder]
handlers=Corpus
propagate=1
qualname=somax.corpus_builder.corpus_builder
[handler_CorpusBuilder]
level=INFO
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Formatting
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[formatter_logfile]
format=%(asctime)s.%(msecs)03d [%(levelname)s]: %(name)s: %(message)s
datefmt=%H:%M:%S
class=logging.Formatter

[formatter_stdout]
format=[%(levelname)s]: %(message)s
class=logging.Formatter